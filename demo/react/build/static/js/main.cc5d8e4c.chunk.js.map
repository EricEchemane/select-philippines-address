{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","regionData","setRegion","provinceData","setProvince","cityData","setCity","barangayData","setBarangay","regionAddr","setRegionAddr","provinceAddr","setProvinceAddr","cityAddr","setCityAddr","barangayAddr","setBarangayAddr","region","regions","then","response","useEffect","className","onChange","e","target","selectedOptions","text","provinces","value","onSelect","disabled","length","map","item","region_code","region_name","cities","province_code","province_name","barangays","city_code","city_name","brgy_code","brgy_name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA4FeA,EAxFH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACPC,EADO,KACKC,EADL,OAEsBF,mBAAS,IAF/B,mBAEPG,EAFO,KAEOC,EAFP,OAGcJ,mBAAS,IAHvB,mBAGPK,EAHO,KAGGC,EAHH,OAIsBN,mBAAS,IAJ/B,mBAIPO,EAJO,KAIOC,EAJP,OAMsBR,mBAAS,IAN/B,mBAMPS,EANO,KAMKC,EANL,OAO0BV,mBAAS,IAPnC,mBAOPW,EAPO,KAOOC,EAPP,OAQkBZ,mBAAS,IAR3B,mBAQPa,EARO,KAQGC,EARH,OAS0Bd,mBAAS,IATnC,mBASPe,EATO,KASOC,EATP,KAWRC,EAAS,WACXC,oBAAUC,MAAK,SAAAC,GACXlB,EAAUkB,OAmClB,OAJAC,qBAAU,WACNJ,MACD,IAGC,qBAAKK,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,0CACA,iEACA,yBAAQC,SApCH,SAACC,GACdd,EAAcc,EAAEC,OAAOC,gBAAgB,GAAGC,MAC1CC,oBAAUJ,EAAEC,OAAOI,OAAOV,MAAK,SAAAC,GAC3BhB,EAAYgB,GACZd,EAAQ,IACRE,EAAY,QA+BoBsB,SAAUb,EAAtC,UACI,wBAAQc,UAAQ,EAAhB,2BAEI9B,GAAcA,EAAW+B,OAAS,GAAK/B,EAAWgC,KAAI,SAACC,GAAD,OAAU,wBACrCL,MAAOK,EAAKC,YADyB,SACXD,EAAKE,aAAjDF,EAAKC,mBAEb,uBACT,yBAAQZ,SAlCP,SAACC,GACVZ,EAAgBY,EAAEC,OAAOC,gBAAgB,GAAGC,MAC5CU,iBAAOb,EAAEC,OAAOI,OAAOV,MAAK,SAAAC,GACxBd,EAAQc,OA+BJ,UACI,wBAAQW,UAAQ,EAAhB,6BAEI5B,GAAgBA,EAAa6B,OAAS,GAAK7B,EAAa8B,KAAI,SAACC,GAAD,OAAU,wBACzCL,MAAOK,EAAKI,cAD6B,SACbJ,EAAKK,eAArDL,EAAKI,qBAEb,uBACT,yBAAQf,SAlCH,SAACC,GACdV,EAAYU,EAAEC,OAAOC,gBAAgB,GAAGC,MACxCa,oBAAUhB,EAAEC,OAAOI,OAAOV,MAAK,SAAAC,GAC3BZ,EAAYY,OA+BR,UACI,wBAAQW,UAAQ,EAAhB,yBAEI1B,GAAYA,EAAS2B,OAAS,GAAK3B,EAAS4B,KAAI,SAACC,GAAD,OAAU,wBACjCL,MAAOK,EAAKO,UADqB,SACTP,EAAKQ,WAA7CR,EAAKO,iBAEb,uBACT,yBAAQlB,SAlCP,SAACC,GACVR,EAAgBQ,EAAEC,OAAOC,gBAAgB,GAAGC,OAiCpC,UACI,wBAAQI,UAAQ,EAAhB,6BAEIxB,GAAgBA,EAAayB,OAAS,GAAKzB,EAAa0B,KAAI,SAACC,GAAD,OAAU,wBAC7CL,MAAOK,EAAKS,UADiC,SACrBT,EAAKU,WAA7CV,EAAKS,iBAGtB,wCACE5B,EAhCN,KAgCsBF,EAhCtB,KAgCkCF,EAhClC,KAgCkDF,QC1E/CoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc5d8e4c.chunk.js","sourcesContent":["import './App.css';\nimport {regions, provinces, cities, barangays} from 'select-philippines-address';\nimport {useEffect, useState} from \"react\";\n\nconst App = () => {\n    const [regionData, setRegion] = useState([]);\n    const [provinceData, setProvince] = useState([]);\n    const [cityData, setCity] = useState([]);\n    const [barangayData, setBarangay] = useState([]);\n\n    const [regionAddr, setRegionAddr] = useState(\"\");\n    const [provinceAddr, setProvinceAddr] = useState(\"\");\n    const [cityAddr, setCityAddr] = useState(\"\");\n    const [barangayAddr, setBarangayAddr] = useState(\"\");\n\n    const region = () => {\n        regions().then(response => {\n            setRegion(response);\n        });\n    }\n\n    const province = (e) => {\n        setRegionAddr(e.target.selectedOptions[0].text);\n        provinces(e.target.value).then(response => {\n            setProvince(response);\n            setCity([]);\n            setBarangay([]);\n        });\n    }\n\n    const city = (e) => {\n        setProvinceAddr(e.target.selectedOptions[0].text);\n        cities(e.target.value).then(response => {\n            setCity(response);\n        });\n    }\n\n    const barangay = (e) => {\n        setCityAddr(e.target.selectedOptions[0].text);\n        barangays(e.target.value).then(response => {\n            setBarangay(response);\n        });\n    }\n\n    const brgy = (e) => {\n        setBarangayAddr(e.target.selectedOptions[0].text);\n    }\n\n    useEffect(() => {\n        region()\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>REACT JS</h1>\n                <h4>select-philippines-address demo</h4>\n                <select onChange={province} onSelect={region}>\n                    <option disabled>Select Region</option>\n                    {\n                        regionData && regionData.length > 0 && regionData.map((item) => <option\n                            key={item.region_code} value={item.region_code}>{item.region_name}</option>)\n                    }\n                </select><br/>\n                <select onChange={city}>\n                    <option disabled>Select Province</option>\n                    {\n                        provinceData && provinceData.length > 0 && provinceData.map((item) => <option\n                            key={item.province_code} value={item.province_code}>{item.province_name}</option>)\n                    }\n                </select><br/>\n                <select onChange={barangay}>\n                    <option disabled>Select City</option>\n                    {\n                        cityData && cityData.length > 0 && cityData.map((item) => <option\n                            key={item.city_code} value={item.city_code}>{item.city_name}</option>)\n                    }\n                </select><br/>\n                <select onChange={brgy}>\n                    <option disabled>Select Barangay</option>\n                    {\n                        barangayData && barangayData.length > 0 && barangayData.map((item) => <option\n                            key={item.brgy_code} value={item.brgy_code}>{item.brgy_name}</option>)\n                    }\n                </select>\n                <p>Address</p>\n                 {barangayAddr}, {cityAddr}, {provinceAddr}, {regionAddr}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}